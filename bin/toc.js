// Generated by LiveScript 1.6.0
(function(){
  var build, makeOl, join$ = [].join, out$ = typeof exports != 'undefined' && exports || this;
  import$(global, require('ramda'));
  build = function(x){
    var li, ref$, ol;
    li = (ref$ = x.$) != null && ref$.key ? "<li><a href='/" + x.$.lnk + "'>" + x.$.key + "</a>\n" : '';
    ol = x._ ? "\n<ol>" + makeOl(x._) + "</ol>\n" : '';
    return li + ol;
  };
  makeOl = compose$(values, sortBy(path(['$', 'ord'])), map(build), (function(it){
    return join$.call(it, '');
  }));
  out$.build = build;
  function import$(obj, src){
    var own = {}.hasOwnProperty;
    for (var key in src) if (own.call(src, key)) obj[key] = src[key];
    return obj;
  }
  function compose$() {
    var functions = arguments;
    return function() {
      var i, result;
      result = functions[0].apply(this, arguments);
      for (i = 1; i < functions.length; ++i) {
        result = functions[i](result);
      }
      return result;
    };
  }
}).call(this);
